{"version":3,"sources":["components/FirstPage.js","components/App.js","serviceWorker.js","index.js","components/img/JSIcon.png","components/img/NodeIcon.png","components/img/ReactIcon.png","components/img/PythonIcon.png","components/img/MongoIcon.png","components/img/FBIcon.png","components/img/SQLIcon.png"],"names":["componentStyle","display","justifyContent","padding","FirstPage","react_default","a","createElement","style","className","dist_default","Delay","ms","Backspace","count","alt","src","JSIcon","NodeIcon","ReactIcon","PythonIcon","MongoIcon","FBIcon","SQLIcon","Component","App","_this$props","this","props","classes","theme","root","AppBar_default","position","appBar","Toolbar_default","toolbarStyle","alignItems","Typography_default","variant","color","noWrap","target","rel","href","sytle","textDecoration","src_components_FirstPage","withStyles","flexGrow","backgroundColor","height","withTheme","Boolean","window","location","hostname","match","createMuiTheme","palette","primary","main","secondary","transparent","ReactDOM","render","styles","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.724e9330.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './FirstPage.css';\r\n\r\nimport Typing from 'react-typing-animation';\r\nimport JSIcon from './img/JSIcon.png';\r\nimport NodeIcon from './img/NodeIcon.png';\r\nimport ReactIcon from './img/ReactIcon.png';\r\nimport PythonIcon from './img/PythonIcon.png';\r\nimport MongoIcon from './img/MongoIcon.png';\r\nimport FBIcon from './img/FBIcon.png';\r\nimport SQLIcon from './img/SQLIcon.png';\r\n\r\nconst componentStyle = {\r\n\tdisplay: \"grid\",\r\n\tjustifyContent: \"center\",\r\n\tpadding: \"0 24px\"\r\n}\r\n\r\nclass FirstPage extends Component {\r\n  render() {\r\n    return (\r\n    \t<section style={componentStyle}>\r\n\r\n\t\t<div className = \"typingSection\">\r\n\t\t  <Typing>\r\n\t\t    <span className=\"oneTyping\">Hello</span><br />\r\n\t\t    <Typing.Delay ms={1000} />\r\n\t\t    <span className=\"oneTyping\"> I'm James Kim</span><br />\r\n\t\t    <Typing.Delay ms={1000} />\r\n\t\t    <Typing.Backspace count={14} />\r\n\t\t    <span className=\"oneTyping\"> I'm a Web Developer</span>\r\n\t\t    <Typing.Delay ms={1000} />\r\n\t\t    <Typing.Backspace count={20} />\r\n\t\t    <span className=\"oneTyping\"> Coding is fun</span>\r\n\t\t    <Typing.Delay ms={1000} />\r\n\t\t    <Typing.Backspace count={4} />\r\n\t\t    <span className=\"oneTyping\"> love</span>\r\n\t\t    <Typing.Delay ms={1000} />\r\n\t\t    <Typing.Backspace count={5} />\r\n\t\t    <span className=\"oneTyping\"> my life</span>\r\n\t\t    <Typing.Delay ms={1000000} />\r\n\t\t  </Typing>\r\n\t\t</div>\r\n\r\n\t\t  <div className = \"skillsetIcons\">\r\n\t\t      \t<img className = \"skillseticon\" alt=\"icon\" src = {JSIcon} />\r\n\t\t    \t<img className = \"skillseticon\" alt=\"icon\" src = {NodeIcon} />\r\n\t\t    \t<img className = \"skillseticon\" alt=\"icon\" src = {ReactIcon} />\r\n\t\t    \t<img className = \"skillseticon\" alt=\"icon\" src = {PythonIcon} />\r\n\t\t    \t<img className = \"skillseticon\" alt=\"icon\" src = {MongoIcon} />\r\n\t\t    \t<img className = \"skillseticon\" alt=\"icon\" src = {FBIcon} />\r\n\t\t    \t<img className = \"skillseticon\" alt=\"icon\" src = {SQLIcon} />\r\n\t\t  </div>\r\n\r\n\t\t  <div className=\"arrowDownDiv\">\r\n\t\t  \t<i className=\"fas fa-angle-down arrowDown\"></i>\r\n\t\t  </div>\r\n\r\n    \t</section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FirstPage;\r\n","import React, { Component } from 'react';\nimport FirstPage from './FirstPage';\nimport './App.css';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar : {\n\tbackgroundColor: \"transparent\",\n  },\n  toolbarStyle : {\n\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    color:\"white\"\n  },\n  FirstPage : {\n  \theight: \"90vh\"\n  }\n});\n\nclass App extends Component {\n\nrender() {\n\tconst { classes, theme } = this.props;\n\treturn (\n\t<div className=\"App\">\n\t<section className={classes.root}>\n\t  <AppBar position=\"static\" className={classes.appBar}>\n            <Toolbar className={classes.toolbarStyle}>\n              <span style={{display:\"flex\", alignItems:\"center\"}}>\n              <Typography variant=\"title\" color=\"inherit\" noWrap>\n                James Kim's Portfolio\n              </Typography>\n              </span>\n              <span>\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/april9288/\" sytle={{textDecoration: \"none\"}}><i className=\"fab fa-github-alt barIcons\"></i></a>\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/jongho-kim-b05618170/\" sytle={{textDecoration: \"none\"}}><i className=\"fab fa-linkedin barIcons\"></i></a>\n              </span>\n\n            </Toolbar>\n\t  </AppBar>\n\t</section>\n\n\t<section className={classes.FirstPage}>\n\t\t<FirstPage />\n\t</section>\n\t<section className={classes.FirstPage}>\n\t\t<FirstPage />\n\t</section>\n\t<section className={classes.FirstPage}>\n\t\t<FirstPage />\n\t</section>\n\t</div>\n\t);\n\t}\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(App);","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n   palette: {\n    primary: {\n      main: '#12375c',\n    },\n    secondary: {\n      main: '#69e781',\n    },\n    transparent: {\n      main: \"transparent\",\n    }\n  },\n});\n\nReactDOM.render(        \n\t<MuiThemeProvider theme={theme}>\n    \t<App />\n  </MuiThemeProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/JSIcon.1adf28d6.png\";","module.exports = __webpack_public_path__ + \"static/media/NodeIcon.86c3644c.png\";","module.exports = __webpack_public_path__ + \"static/media/ReactIcon.a26e76c7.png\";","module.exports = __webpack_public_path__ + \"static/media/PythonIcon.6f37f2c1.png\";","module.exports = __webpack_public_path__ + \"static/media/MongoIcon.6f229582.png\";","module.exports = __webpack_public_path__ + \"static/media/FBIcon.3163efd5.png\";","module.exports = __webpack_public_path__ + \"static/media/SQLIcon.8eaea1ef.png\";"],"sourceRoot":""}